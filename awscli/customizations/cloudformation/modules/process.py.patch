--- process.py	2023-04-18 21:28:36
+++ process.py	2023-04-18 21:28:36
@@ -652,6 +652,7 @@
         # For example, Content.Arn or Content[0].Arn
 
         foreach_modules = self.parent_module.foreach_modules
+        is_map_parameter = False
 
         name = v[0]
         prop_name = v[1]
@@ -664,7 +665,7 @@
                 if tokens[1] != "]":
                     num = tokens[1].replace("]", "")
                     if num.isdigit():
-                        index = int(num)
+                        index = int(num)  # Numeric index for ForEach
                     else:
                         # Support Content[A].Arn, Content['A'].Arn
                         if name not in foreach_modules:
@@ -678,10 +679,30 @@
                         raise exceptions.InvalidModuleError(msg=msg)
             else:
                 # This is a reference to all of the foreach values
-                # For example, Content[].Arn
-                if name in foreach_modules:
+                # For example, Content[].Arn or a Map parameter access
+                
+                # First check if this is a ForEach module reference
+                if name in foreach_modules:  
                     self.resolve_output_getatt_foreach(foreach_modules, name, prop_name)
                     return False
+                
+                # If not a ForEach module, check if it's a Map parameter
+                elif name in self.props and isinstance(self.props[name], dict):
+                    map_value = self.props[name]
+                    
+                    # Handle !GetAtt MapName[] - return list of keys
+                    if prop_name == "":
+                        d[n] = list(map_value.keys())
+                        return True
+                    
+                    # Handle !GetAtt MapName[].AttributeName - return list of all values for that attribute
+                    result = []
+                    for key in map_value:
+                        if isinstance(map_value[key], dict) and prop_name in map_value[key]:
+                            result.append(map_value[key][prop_name])
+                    if result:
+                        d[n] = result
+                        return True
+                    
                 return False
 
         # index might be a number like 0: Content[0].Arn
@@ -689,6 +710,22 @@
         # The name of the foreach module might be Content0 or ContentA,
         # depending on if we used an Fn::ForEach identifier.
 
+        # Check if this is a Map parameter access with a specific key
+        if name in self.props and isinstance(self.props[name], dict):
+            map_value = self.props[name]
+            
+            # Handle !GetAtt MapName[Key] - return entire object at that key
+            if index != -1 and isinstance(index, str) and index in map_value:
+                if prop_name == "":
+                    d[n] = map_value[index]
+                    return True
+                
+                # Handle !GetAtt MapName[Key].Attribute - return specific attribute
+                if isinstance(map_value[index], dict) and prop_name in map_value[index]:
+                    d[n] = map_value[index][prop_name]
+                    return True
+                    
+        # Handle ForEach module references
         if index != -1:
             if isinstance(index, int):
                 name = f"{name}{index}"
