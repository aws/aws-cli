{
  "general": {
     "input": {
      "suites": [
        "Test cases for PutWithContentEncoding operation",
        "Test cases for QueryIdempotencyTokenAutoFill operation",
        "Test cases for HostWithPathOperation operation",
        "Idempotency token auto fill"
      ]
    }
  },
  "protocols": {
    "query" : {
      "input": {
        "cases": [
          "QueryFlattenedListArgWithXmlName"
        ]
      },
      "output": {
        "cases": [
          "QueryXmlLists",
          "QueryComplexError"
        ]
      }
    },
    "ec2" : {
      "input" : {
        "cases": [
          "Ec2QueryEndpointTraitWithHostLabel",
          "Ec2Lists",
          "Ec2TimestampsInput"
        ]
      },
      "output": {
        "cases": [
          "Ec2XmlLists",
          "Ec2ComplexError"
        ]
      }
    },
    "json" : {
      "input": {
        "cases": [
          "AwsJson11StructuresDontSerializeNullValues"
        ]
      },
      "output" : {
        "cases": [
          "AwsJson11FooErrorUsingXAmznErrorType",
          "AwsJson11FooErrorUsingXAmznErrorTypeWithUri",
          "AwsJson11FooErrorUsingXAmznErrorTypeWithUriAndNamespace",
          "AwsJson11FooErrorUsingCode",
          "AwsJson11FooErrorUsingCodeAndNamespace",
          "AwsJson11FooErrorUsingCodeUriAndNamespace"
        ]
      }
    },
    "json_1_0" : {
      "output" : {
        "cases": [
          "AwsJson10FooErrorUsingXAmznErrorType",
          "AwsJson10FooErrorUsingXAmznErrorTypeWithUri",
          "AwsJson10FooErrorUsingXAmznErrorTypeWithUriAndNamespace",
          "AwsJson10FooErrorUsingCode",
          "AwsJson10FooErrorUsingCodeAndNamespace",
          "AwsJson10FooErrorUsingCodeUriAndNamespace"
        ]
      }
    },
    "rest-json" : {
      "input" : {
        "cases": [
          "MediaTypeHeaderInputBase64",
          "RestJsonHttpChecksumRequired",
          "RestJsonNullAndEmptyHeaders",
          "RestJsonQueryPrecedence",
          "RestJsonHttpPayloadWithUnsetUnion",
          "DocumentTypeAsPayloadInputString",
          "DocumentTypeAsPayloadInput"
        ]
      },
      "output" : {
        "cases": [
          "RestJsonFooErrorUsingXAmznErrorType",
          "RestJsonFooErrorUsingXAmznErrorTypeWithUri",
          "RestJsonFooErrorUsingXAmznErrorTypeWithUriAndNamespace",
          "RestJsonHttpPayloadTraitsWithNoBlobBody",
          "RestJsonHttpPayloadWithUnsetUnion",
          "RestJsonInputAndOutputWithTimestampHeaders",
          "RestJsonInputAndOutputWithQuotedStringHeaders",
          "RestJsonDeserializesDenseSetMapAndSkipsNull",
          "MediaTypeHeaderOutputBase64"
        ]
      }
    },
    "rest-xml": {
      "input": {
        "cases": [
          "BodyWithXmlName",
          "RestXmlHttpPayloadWithUnion",
          "HttpPayloadWithXmlName",
          "HttpPayloadWithXmlNamespace",
          "HttpPayloadWithXmlNamespaceAndPrefix",
          "XmlAttributesOnPayload",
          "NullAndEmptyHeaders",
          "RestXmlQueryPrecedence"
        ]
      },
      "output": {
        "cases": [
          "InputAndOutputWithTimestampHeaders",
          "RestXmlHttpPayloadWithUnsetUnion",
          "HttpPayloadTraitsWithNoBlobBody",
          "ComplexError",
          "BodyWithXmlName",
          "XmlLists",
          "IgnoreQueryParamsInResponse"
        ]
      }
    },
    "smithy-rpc-v2-cbor": {
      "output": {
        "cases": [
          "RpcV2CborExtraFieldsInTheBodyShouldBeSkippedByClients",
          "RpcV2CborDeserializesDenseSetMapAndSkipsNull"
        ]
      }
    }
  }
}
